name: Tag version, build and release

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tag-commit-if-version-updated:
    name: Tag commit if new version number in package.json
    runs-on: ubuntu-latest
    outputs:
      NEW_VERSION: ${{ steps.check-if-version-updated.outputs.test }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Check if version updated
        id: check-if-version-updated
        run: | 
          TAG=$(cat 'package.json' | jq -r '.version')
          TAG=0.1.5
          if [[ ! $(git tag | grep "${TAG}") ]]; then
              echo "::set-output name=version::v${TAG}"
          else
              echo "::set-output name=version::"
          fi

      - name: Tag commit with version
        if: ${{steps.check-if-version-updated.outputs.test}}
        env:
          TAG: v${{steps.check-if-version-updated.outputs.test}}
        run: | 
          git tag -a ${TAG} -m ${TAG}
          git push --follow-tags
  
  release:
    needs: tag-commit-if-version-updated
    if: ${{needs.tag-commit-if-version-updated.outputs.NEW_VERSION}}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.GITHUB_TOKEN }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{needs.tag-commit-if-version-updated.outputs.NEW_VERSION}}
