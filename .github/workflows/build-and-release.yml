name: Tag version, build and release

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        # os: [ubuntu-latest]
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12
      
      - name: Install all dependencies
        run: |
          npm install

      - name: Build and release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run release

  # check-if-version-updated:
  #   name: Check if version updated
  #   runs-on: ubuntu-latest
  #   outputs:
  #     NEW_VERSION: ${{ steps.step2.outputs.NEW_VERSION }}

  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v2

  #     - name: Check if version updated
  #       id: step2
  #       run: | 
  #         # In case only a shallow clone was done
  #         git fetch --tags
          
  #         VERSION=$(cat 'package.json' | jq -r '.version')
          
  #         if [[ ! $(git tag | grep "${VERSION}") ]]; then
  #             echo "New version: v${VERSION}"
  #             echo "::set-output name=NEW_VERSION::${VERSION}"
  #         else
  #             echo "No new version: v${VERSION}"
  #             echo "::set-output name=NEW_VERSION::"
  #         fi

  # tag-commit:
  #   name: Tag commit
  #   needs: check-if-version-updated
  #   if: ${{needs.check-if-version-updated.outputs.NEW_VERSION}}
  #   runs-on: ubuntu-latest
  #   env:
  #     GIT_NAME: "Github Action: ${{github.action}}"
  #     GIT_EMAIL: no-reply@karsten-moholt.no
  #     TAG: v${{needs.check-if-version-updated.outputs.NEW_VERSION}}
  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v2

  #     - name: Tag commit with version
  #       run: | 
  #         git config --global user.name "${GIT_NAME}"
  #         git config --global user.email "${GIT_EMAIL}"
  #         git tag -a ${TAG} -m ${TAG}
  #         git push --follow-tags
  
  # release:
  #   needs: check-if-version-updated
  #   if: ${{needs.check-if-version-updated.outputs.NEW_VERSION}}
  #   runs-on: ${{ matrix.os }}
  #   env:
  #     VERSION: ${{needs.check-if-version-updated.outputs.NEW_VERSION}}

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       # os: [macos-latest, ubuntu-latest, windows-latest]

  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v1

  #     - name: Install Node.js, NPM and Yarn
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 12

  #     - name: Build/release Electron app
  #       uses: samuelmeuli/action-electron-builder@v1
  #       with:
  #         # GitHub token, automatically provided to the action
  #         # (No need to define this secret in the repo settings)
  #         github_token: ${{ secrets.GITHUB_TOKEN }}

  #         # If the commit is tagged with a version (e.g. "v1.0.0"),
  #         # release the app after building
  #         release: $VERSION

  #         # [choices: "onTag", "onTagOrDraft", "always", "never"]
  #         args: "--publish always"
